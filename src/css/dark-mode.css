.dark-mode-theme {
  transition: 0.5s;
}

.dark-mode-theme .main {
  background-color: rgb(21, 32, 43) !important;
}

.dark-mode-theme hr {
  background: white !important;
}

.dark-mode-theme .s1 {
  filter: brightness(90%);
  transition: 0.3s;
}

.dark-mode-theme .s3 {
  filter: brightness(90%);
  transition: 0.3s;
}

.dark-mode-theme .stars {
  filter: brightness(150%) !important;
  transition: 0.3s;
}

.dark-mode-theme .full-screen-menu {
  background-color: #0c0c0c !important;
}

.dark-mode-theme .mobile-menu {
  background-color: #777777 !important;
}

.dark-mode-theme .mobile-util-menu {
  filter: brightness(90%);
}

.dark-mode-theme .backToTop {
  filter: brightness(90%);
}

.dark-mode-theme .toBottom .fa-circle {
  color: #777777;
}

.dark-mode-theme .intro-description {
  color: white !important;
}

.dark-mode-theme .big-title {
  color: white !important;
}

.dark-mode-theme .medium-title {
  color: white !important;
}

.dark-mode-theme .date-range {
  color: white !important;
}

.dark-mode-theme .job-description {
  color: white !important;
}

.dark-mode-theme .black {
  color: white !important;
}

.dark-mode-theme .red {
  color: rgb(38, 145, 238);
}

.dark-mode-theme .desktop-menubar .nav-bar {
  color: #0c0c0c;
}

.dark-mode-theme .summary-canary-logo {
  content: url("/Assets/canary-white.png");
  transition: 0.3s;
}

.dark-mode-theme .nasdaq-logo {
  content: url("/Assets/NASDAQ_Logo_white.svg");
  transition: 0.3s;
}

.dark-mode-theme .usyd-logo {
  content: url("/Assets/usyd-white.svg");
  transition: 0.3s;
}

.dark-mode-theme .wdhb-logo {
  content: url("/Assets/wdhb-white.png");
  transition: 0.3s;
}

.dark-mode-theme .usydLogo {
  background-image: url(/Assets/usyd-white.svg);
  transition: 0.3s;
}

.dark-mode-theme .skill-set {
  background-color: rgb(38, 145, 238);
}

@media only screen and (min-width: 1199.99px) {
  .dark-mode-theme .my-skill:hover {
    background-color: #353535;
  }
}

.dark-mode-theme .my-skill img {
  filter: invert(1) !important;
}

.dark-mode-theme .skills-name {
  color: white !important;
}

.dark-mode-theme .personal-description {
  color: white !important;
}

.dark-mode-theme .desktop-nav-menu {
  background-color: #0c0c0c;
}

.dark-mode-theme .prograss-overlay {
  background-color: #646464 !important;
}

.dark-mode-theme .frontRightPic {
  background-color: #121212 !important;
}

.dark-mode-theme .summary-for-responsive {
  background-color: #121212 !important;
}

.dark-mode-theme .summary-for-responsive p {
  color: #fff !important;
}

.dark-mode-theme .frontRightPic p {
  color: #fff !important;
}

.dark-mode-theme .frontRightPic a {
  background-color: rgb(21, 32, 43) !important;
}

.dark-mode-theme .summary-for-responsive a {
  background-color: rgb(21, 32, 43) !important;
}

@media only screen and (max-width: 575.98px) {
}

.dark-mode-button {
  --size: 1.2rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
  border: none;
  cursor: pointer;
  width: var(--size);
  height: var(--size);
  -webkit-box-shadow: inset calc(var(--size) * 0.33) calc(var(--size) * -0.25) 0;
  box-shadow: inset calc(var(--size) * 0.33) calc(var(--size) * -0.25) 0;
  border-radius: 999px;
  color: #e6e6ff;
  -webkit-transition: all 500ms;
  transition: all 500ms;
}

.dark-mode-button:checked {
  --ray-size: calc(var(--size) * -0.37);
  --offset-orthogonal: calc(var(--size) * 0.85);
  --offset-diagonal: calc(var(--size) * 0.6);
  -webkit-transform: scale(0.65);
  transform: scale(0.65);
  color: #ffaa00;
  -webkit-box-shadow: inset 0 0 0 var(--size),
    calc(var(--offset-orthogonal) * -1) 0 0 var(--ray-size),
    var(--offset-orthogonal) 0 0 var(--ray-size),
    0 calc(var(--offset-orthogonal) * -1) 0 var(--ray-size),
    0 var(--offset-orthogonal) 0 var(--ray-size),
    calc(var(--offset-diagonal) * -1) calc(var(--offset-diagonal) * -1) 0
      var(--ray-size),
    var(--offset-diagonal) var(--offset-diagonal) 0 var(--ray-size),
    calc(var(--offset-diagonal) * -1) var(--offset-diagonal) 0 var(--ray-size),
    var(--offset-diagonal) calc(var(--offset-diagonal) * -1) 0 var(--ray-size);
  box-shadow: inset 0 0 0 var(--size),
    calc(var(--offset-orthogonal) * -1) 0 0 var(--ray-size),
    var(--offset-orthogonal) 0 0 var(--ray-size),
    0 calc(var(--offset-orthogonal) * -1) 0 var(--ray-size),
    0 var(--offset-orthogonal) 0 var(--ray-size),
    calc(var(--offset-diagonal) * -1) calc(var(--offset-diagonal) * -1) 0
      var(--ray-size),
    var(--offset-diagonal) var(--offset-diagonal) 0 var(--ray-size),
    calc(var(--offset-diagonal) * -1) var(--offset-diagonal) 0 var(--ray-size),
    var(--offset-diagonal) calc(var(--offset-diagonal) * -1) 0 var(--ray-size);
}
